#!/bin/bash
# RESTORE MARBEW.COM ON NEW INSTANCE
#
#      
#
#      FROM ROOT USER, THE ONLY MANUAL THING TO DO IS:
#      vi restore.sh && chmod 700 restore.sh && ./restore.sh
#      
#      COPYING THE BELOW COMMENTED CODE IN restore.sh:
#
#      #!/bin/bash
#      yum update -y && \
#      yum install wget unzip -y && \
#      wget https://github.com/marbew/superbluecandy/archive/master.zip && \
#      unzip master.zip && \
#      cd superbluecandy-master/
#      chmod 700 redhat7_Lamp_restore 
#      ./redhat7_Lamp_restore
#      
#      
#
#run the script passing the right parameters for restoring the entire production website

echo -e "[0 OF 6] Enter port number of backup_server[22]: "
read servernump

echo -e "\n\n[1 OF 6] Enter USER@SERVER  backup_server: "
read server

echo -e "[2 OF 6] Enter /path_to_backup/uploadable.tar.gz backup_server: "
read uploadable

echo -e "[3 OF 6] Enter db_password: "
read mysql_rootpwd

echo -e "[4 OF 6] Enter Database name to import: "
read mysql_db_name

echo -e "[5 OF 6] Enter Database decrypt password: "
read opensslPWD

echo -e "[6 OF 6] Enter new Login User: "
read NEWUSER



timedatectl set-timezone UTC && \
if [ -f "/myswap" ]; then        
       echo -e "\n[SWAP FILE EXISTS ALREADY]"
else
       echo -e "\n[START CREATING SWAP FILE]"
       /bin/dd if=/dev/zero of=/myswap count=2048 bs=1MiB && chmod 600 /myswap && /sbin/mkswap /myswap && /sbin/swapon /myswap 
       echo "/myswap   swap    swap    sw  0   0" >> /etc/fstab && /bin/mount -a     
fi
yum install -y vim firewalld httpd mariadb-server mariadb php php-mysql mod_ssl mod_security wget curl sysstat mailx unzip rkhunter && \
cd /tmp && \
wget https://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm && \
rpm -Uvh epel-release-latest-7*.rpm && \
yum update -y && \
yum install -y tripwire arpwatch whois screen bind-utils mod_evasive && \
cd /opt && curl -O https://raw.githubusercontent.com/wp-cli/builds/gh-pages/phar/wp-cli.phar
php wp-cli.phar --info
chmod +x wp-cli.phar
mv wp-cli.phar /usr/local/bin/wp
hostnamectl set-hostname marbew.com --static
systemctl enable httpd mariadb arpwatch && \
systemctl restart firewalld httpd mariadb arpwatch && \
systemctl status firewalld httpd mariadb arpwatch && \
firewall-cmd --permanent --add-service=http && \
firewall-cmd --permanent --add-service=https && \
firewall-cmd --reload && \
echo -e "\n[COPYING PRIVATE KEY: STARTED]"
cat <<EOF >> ~/.ssh/italia
-----BEGIN RSA PRIVATE KEY-----

-----END RSA PRIVATE KEY-----
EOF
chmod 400 ~/.ssh/italia
echo -e "\n[COPYING PRIVATE KEY: FINISHED]"

echo -e "\n[COPYING BACKUP: STARTED]"
ssh -i ~/.ssh/italia -o StrictHostKeyChecking=no $server -p $servernump /opt/latest_backup 2>/dev/null
scp -r -i ~/.ssh/italia -P $servernump $server:$uploadable /root/ && \
cd /root/ && \
ls -la /root && \
tar -xzf /root/uploadable.tar.gz
echo -e "\n[COPYING BACKUP: FINISHED]"
ls -la /root/
echo -e "\n[DELETING TEMP FILE FROM REMOTE BACKUP SERVER: STARTED] "
ssh -i ~/.ssh/italia $server -p $servernump rm -rf $uploadable
echo -e "\n[DELETING TEMP FILE FROM REMOTE BACKUP SERVER: FINISHED] "
echo -e "\n[INSTALLING LATEST WORDPRESS VERSION: STARTED]"
cd /var/www/html && \
wget http://wordpress.org/latest.zip && \
unzip -q latest.zip && \
cp -r wordpress/* /var/www/html/ && \
echo -e "\n[INSTALLING LATEST WORDPRESS VERSION: FINISHED]"

echo -e "\n[COPY BACKUP WORDPRESS INTO NEW SERVER: STARTED]"
cp /root/ec2-prod.marbew.com/my-backup/html/.htaccess /var/www/html/ 2>/dev/null
yes | cp /root/ec2-prod.marbew.com/my-backup/html/wp-config.php /var/www/html/wp-config.php 
yes | cp /root/ec2-prod.marbew.com/my-backup/php.ini /etc/php.ini 

cp -r /root/ec2-prod.marbew.com/my-backup/html/wp-content/uploads /var/www/html/wp-content/ 
cp -r /root/ec2-prod.marbew.com/my-backup/html/wp-content/plugins /var/www/html/wp-content/
cp -r /root/ec2-prod.marbew.com/my-backup/html/wordfence-waf.php /var/www/html/ 
cp -r /root/ec2-prod.marbew.com/my-backup/html/wp-content/themes/twentyfourteen /var/www/html/wp-content/themes/ 
yes | cp /root/ec2-prod.marbew.com/my-backup/root/.bashrc /root/ 2>/dev/null

cp /root/ec2-prod.marbew.com/my-backup/pki/tls/certs/2016-marbew.com.crt /etc/pki/tls/certs/ 
cp /root/ec2-prod.marbew.com/my-backup/pki/tls/certs/ca-marbew.com.crt /etc/pki/tls/certs/ 
cp /root/ec2-prod.marbew.com/my-backup/pki/tls/private/2016-marbew.com.key /etc/pki/tls/private/ 
cp /etc/httpd/conf.d/ssl.conf /etc/httpd/conf.d/ssl.conf.ori 

yes | cp /root/ec2-prod.marbew.com/my-backup/httpd/conf.d/ssl.conf /etc/httpd/conf.d/ 
yes | cp /root/ec2-prod.marbew.com/my-backup/httpd/conf.d/mod_security.conf /etc/httpd/conf.d/

yes | cp -r /root/ec2-prod.marbew.com/my-backup/root/* /root/
yes | cp -r /root/ec2-prod.marbew.com/my-backup/cron* /etc/
echo -e "\n[COPY BACKUP WORDPRESS INTO NEW SERVER: FINISHED]"

cd /
mkdir /my-backup
rm -rf /var/www/html/latest.zip
rm -rf /var/www/html/wordpress

echo "[DECOMPRESS DATABASE]"
openssl enc -d -aes-256-cbc -in /root/ec2-prod.marbew.com/my-backup/mysql/$mysql_db_name -out /root/ec2-prod.marbew.com/my-backup/mysql/db.gz -k $opensslPWD
gzip -d < /root/ec2-prod.marbew.com/my-backup/mysql/db.gz > /root/ec2-prod.marbew.com/my-backup/mysql/db-sql
echo -e "\n[IMPORT DATABASE: STARTED]"
mysql < /root/ec2-prod.marbew.com/my-backup/mysql/db-sql
find /var/www/html/ -type f -exec chmod 664 {} \;
find /var/www/html/ -type d -exec chmod 775 {} \;
chown -R apache:apache /var/www/html/.*
chown -R apache:apache /var/www/html/*
systemctl restart mariadb 
mysql --user="root" --password=$mysql_rootpwd --database=wordpress -s --execute="drop database test;"
echo $(mysql --user="root" --password=$mysql_rootpwd --database=wordpress -s --execute="select user_login from wp_users;")
echo -e "\n[IMPORT DATABASE: FINISHED]\n"
systemctl restart httpd 
systemctl status httpd mariadb

echo -e "\n[ADDING NEW USER AND BLOCKING ACCESS TO DEFAULT ONE]" 
useradd $NEWUSER
cd /home/ec2-user/
yes | cp -R .* /home/$NEWUSER/
yes | cp -R . /home/$NEWUSER/
cd /home/$NEWUSER
chown -R $NEWUSER:$NEWUSER *
chown -R $NEWUSER:$NEWUSER .*
echo "$NEWUSER           ALL=(ALL)       NOPASSWD: ALL" >> /etc/sudoers
usermod -s /sbin/nologin ec2-user
echo -e "\n[CLEANING INSTALLATION: STARTED]"
cd /root && rm -rf uploadable.tar.gz superbluecandy-master master.zip ec2-prod.marbew.com anaconda-ks.cfg
ls -la /root/
echo -e "\n[CLEANING INSTALLATION: DONE]"

echo -e "[READY TO SSH IN WITH USER@SERVER: $NEWUSER@$(curl icanhazip.com)] "
echo -e "[REMEMBER TO MOUNT PERMANENTLY: /my-backup in /etc/fstab with new UUID] "
echo -e "[REMEMBER TO SETUP TRIPWIRE KEYS IN ORDER TO RECEIVE STATUS EMAILS. HOWTO AVAIABLE IN ROOT FOLDER] "
