#!/bin/bash
# MARBEW.COM
#
#      
#
#      FROM ROOT USER, THE ONLY MANUAL THING TO DO IS:
#      vi restore.sh && chmod 700 restore.sh && ./restore.sh
#      
#      COPYING THE BELOW COMMENTED CODE IN restore.sh:
#
#      #!/bin/bash
#      yum update -y && \
#      yum install wget unzip -y && \
#      wget https://github.com/marbew/superbluecandy/archive/master.zip && \
#      unzip master.zip && \
#      cd superbluecandy-master/
#      chmod 700 redhat7_Lamp_restore 
#      ./redhat7_Lamp_restore
#      
#      
#
#run the script passing the right parameters for restoring the entire production website

echo -e "[0 OF 5] Enter RSA key: "
read NEWRSA_key

echo -e "\n\n[1 OF 5] Enter USER@SERVER  backup_server: "
read server

echo -e "[2 OF 5] Enter /path_to_backup/uploadable.tar.gz backup_server: "
read uploadable

echo -e "[3 OF 5] Enter Mysql_password: "
read mysql_rootpwd

echo -e "[4 OF 5] Enter Database to import: "
read mysql_db_name

echo -e "[5 OF 5] Enter new Login User: "
read NEWUSER



timedatectl set-timezone UTC && \
yum install -y vim firewalld httpd mariadb-server mariadb php php-mysql mod_ssl mod_security wget sysstat mailx unzip && \
cd /tmp && \
wget https://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm && \
rpm -Uvh epel-release-latest-7*.rpm && \
yum update -y && \
yum install -y tripwire arpwatch whois screen bind-utils mod_evasive && \
systemctl enable httpd mariadb arpwatch && \
systemctl restart firewalld httpd mariadb arpwatch && \
systemctl status firewalld httpd mariadb arpwatch && \
firewall-cmd --permanent --add-service=http && \
firewall-cmd --permanent --add-service=https && \
firewall-cmd --reload && \
#echo -e "\n[START COPYING PRIVATE KEY]"
cat <<EOF >> ~/.ssh/italia
-----BEGIN RSA PRIVATE KEY-----
echo $NEWRSA_key
-----END RSA PRIVATE KEY-----
EOF
#echo -e "\n[DONE!]\n"
chmod 400 ~/.ssh/italia

echo -e "\n[START COPYING ENTIRE BACKUP]"
ssh -i ~/.ssh/italia -o StrictHostKeyChecking=no $server -p 443 /opt/latest_backup
scp -r -i ~/.ssh/italia -P 443 $server:$uploadable /root/ && \
cd /root/ && \
tar -xzf /root/uploadable.tar.gz
echo -e "\n[DONE!]\n"
ls -la /root/
#echo -e "\n\n[DELETING TEMP FILE FROM BACKUP SERVER] "
ssh -i ~/.ssh/italia $server -p 443 rm -rf $uploadable
#echo -e "\n[DONE!]\n"
echo -e "\n\n[INSTALLING WORDPRESS UPDATED]"
cd /var/www/html && \
wget http://wordpress.org/latest.zip && \
unzip -q latest.zip && \
cp -r wordpress/* /var/www/html/ && \
echo -e "\n[DONE!]\n"
#echo -e "\n\n[COPY BACKUP WORDPRESS INTO NEW SERVER]"
cp /root/ec2-prod.marbew.com/my-backup/html/.htaccess /var/www/html/ 2>/dev/null
yes | cp /root/ec2-prod.marbew.com/my-backup/html/wp-config.php /var/www/html/wp-config.php 
cp -r /root/ec2-prod.marbew.com/my-backup/html/wp-content/uploads /var/www/html/wp-content/ 
cp -r /root/ec2-prod.marbew.com/my-backup/html/wp-content/plugins /var/www/html/wp-content/ 
cp -r /root/ec2-prod.marbew.com/my-backup/html/wp-content/themes/twentyfourteen /var/www/html/wp-content/themes/ 
yes | cp /root/ec2-prod.marbew.com/my-backup/root/.bashrc /root/ 2>/dev/null
cp /root/ec2-prod.marbew.com/my-backup/pki/tls/certs/2016-marbew.com.crt /etc/pki/tls/certs/ 
cp /root/ec2-prod.marbew.com/my-backup/pki/tls/certs/ca-marbew.com.crt /etc/pki/tls/certs/ 
cp /root/ec2-prod.marbew.com/my-backup/pki/tls/private/2016-marbew.com.key /etc/pki/tls/private/ 
cp /etc/httpd/conf.d/ssl.conf /etc/httpd/conf.d/ssl.conf.ori 
yes | cp /root/ec2-prod.marbew.com/my-backup/httpd/conf.d/ssl.conf /etc/httpd/conf.d/ 
yes | cp /root/ec2-prod.marbew.com/my-backup/httpd/conf.d/mod_security.conf /etc/httpd/conf.d/
yes | cp -r /root/ec2-prod.marbew.com/my-backup/root/* /root/
yes | cp -r /root/ec2-prod.marbew.com/my-backup/cron* /etc/
mkdir /my-backup
rm -rf /var/www/html/latest.zip
rm -rf /var/www/html/wordpress

#echo "[DECOMPRESS DATABASE]"
gzip -d < /root/ec2-prod.marbew.com/my-backup/mysql/$mysql_db_name > /root/ec2-prod.marbew.com/my-backup/mysql/db-sql
echo "[INSTALL DATABASE]"
mysql < /root/ec2-prod.marbew.com/my-backup/mysql/db-sql 
echo -e "\n[DONE!]\n"
systemctl restart httpd mariadb
systemctl status httpd mariadb
#echo "[READY TO GO] $(curl icanhazip.com)"
# add new user and block access to default one
useradd $NEWUSER
cd /home/ec2-user/
yes | cp -R .* /home/$NEWUSER/
yes | cp -R . /home/$NEWUSER/
cd /home/$NEWUSER
chown -R $NEWUSER:$NEWUSER *
chown -R $NEWUSER:$NEWUSER .*
echo "$NEWUSER           ALL=(ALL)       NOPASSWD: ALL" >> /etc/sudoers
usermod -s /sbin/nologin ec2-user
cd /root
rm -rf uploadable.tar.gz superbluecandy-master master.zip ec2-prod.marbew.com anaconda-ks.cfg
echo "[READY TO SSH IN WITH USER@SERVER: $NEWUSER@$(curl icanhazip.com)] "
echo "[REMEMBER TO MOUNT: /my-backup in /etc/fstab with new UUID] "
echo "[REMEMBER TO SETUP TRIPWIRE KEYS IN ORDER TO RECEIVE STATUS EMAILS] "
